from aiogram.filters import CommandStart
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import CallbackQuery, Message, User
from aiogram_dialog import Dialog, DialogManager, StartMode, Window
from aiogram_dialog.widgets.text import Const, Format, Case, List, Multi
from aiogram_dialog.widgets.kbd import (Select, Checkbox, ManagedCheckbox,
                                        Column, Multiselect)
from aiogram import Router, F, Bot
import operator


class StartSG(StatesGroup):
    start = State()

# ----------------------------------------------------------------------------
# –≠—Ç–æ —Ö—ç–Ω–¥–ª–µ—Ä, —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π —Ç–æ–≤–∞—Ä–æ–≤
async def category_selection(callback: CallbackQuery, widget: Select,
                             dialog_manager: DialogManager, item_id: str):
    await callback.message.edit_text(f'–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å id={item_id}.')
    await dialog_manager.done()

# –•—ç–Ω–¥–ª–µ—Ä, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –≤ –≤–∏–¥–∂–µ—Ç–µ `Checkbox`
async def checkbox_clicked(callback: CallbackQuery, checkbox: ManagedCheckbox,
                           dialog_manager: DialogManager):
    dialog_manager.dialog_data.update(is_checked=checkbox.is_checked())


# –≥–µ—Ç—Ç–µ—Ä
async def get_categories(**kwargs):
    categories = [
        ('–¢–µ—Ö–Ω–∏–∫–∞', 7),
        ('–û–¥–µ–∂–¥–∞', 8),
        ('–û–±—É–≤—å', 9),
    ]
    return {'categories': categories}

# –ì–µ—Ç—Ç–µ—Ä
async def getter(dialog_manager: DialogManager, **kwargs):
    checked = dialog_manager.dialog_data.get('is_checked')
    return {'checked': checked,
            'not_checked': not checked}

# –ì–µ—Ç—Ç–µ—Ä
async def get_topics(dialog_manager: DialogManager, **kwargs):
    topics = [
        ("IT", '1'),
        ("–î–∏–∑–∞–π–Ω", '2'),
        ("–ù–∞—É–∫–∞", '3'),
        ("–û–±—â–µ—Å—Ç–≤–æ", '4'),
        ("–ö—É–ª—å—Ç—É—Ä–∞", '5'),
        ("–ò—Å–∫—É—Å—Å—Ç–≤–æ", '6'),
    ]
    return {"topics": topics}


# ------------------------------------------------------------
start_dialog = Dialog(
    Window(
        Const(text='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:'),

        Select(
            Format('{item[0]}'),
            id='categ',
            # item_id_getter=lambda x: x[1],
            item_id_getter=operator.itemgetter(1),
            items='categories',
            on_click=category_selection
        ),

        Const(text='–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –≤–∏–¥–∂–µ—Ç–∞ <code>Checkbox</code>\n'),
        Const(text='–°–µ–π—á–∞—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –Ω–µ—Ç', when='not_checked'),
        Const(text='–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –µ—Å—Ç—å:\n<b>–≠—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç</b>', when='checked'),
        Checkbox(
            checked_text=Const('[‚úîÔ∏è] –û—Ç–∫–ª—é—á–∏—Ç—å'),
            unchecked_text=Const('[ ] –í–∫–ª—é—á–∏—Ç—å'),
            id='checkbox',
            default=False,
            on_state_changed=checkbox_clicked,
        ),

        Const(text='–û—Ç–º–µ—Ç—å—Ç–µ —Ç–µ–º—ã –Ω–æ–≤–æ—Å—Ç–µ–π üëá'),
        Column(
            Multiselect(
                checked_text=Format('[‚úîÔ∏è] {item[0]}'),
                unchecked_text=Format('[  ] {item[0]}'),
                id='multi_topics',
                item_id_getter=operator.itemgetter(1),
                items="topics",),
        ),

        state=StartSG.start,
        getter=[get_categories, getter, get_topics]
    ),
)

# *******************************************************************************
router_handlers = Router()
# /start
@router_handlers.message(CommandStart())
async def command_start_process(message: Message, dialog_manager: DialogManager):
    await dialog_manager.start(state=StartSG.start, mode=StartMode.RESET_STACK)
